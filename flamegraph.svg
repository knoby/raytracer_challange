<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="710" onload="init(evt)" viewBox="0 0 1200 710" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = false;
var searchcolor = 'rgb(230,0,230)';
var fluiddrawing = true;
var truncate_text_right = false;]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
            var params = get_params()
            params.x = el.attributes._orig_x.value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = format_percent((parseFloat(e.attributes.x.value) - x) * ratio);
            if (e.tagName == "text") {
                e.attributes.x.value = format_percent(parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value) + (100 * 3 / frames.attributes.width.value));
            }
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = format_percent(parseFloat(e.attributes.width.value) * ratio);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    var ratio = 100 / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.001;
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;    // JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="710" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="693.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="693.00"> </text><svg id="frames" x="10" width="1180"><g><title>&lt;raytracer::scene::objects::Sphere as raytracer::scene::Hittable&gt;::get_hits (1 samples, 0.44%)</title><rect x="0.0000%" y="613" width="0.4386%" height="15" fill="rgb(227,0,7)"/><text x="0.2500%" y="623.50"></text></g><g><title>rand::distributions::float::&lt;impl rand::distributions::Distribution&lt;f64&gt; for rand::distributions::Standard&gt;::sample (3 samples, 1.32%)</title><rect x="0.4386%" y="613" width="1.3158%" height="15" fill="rgb(217,0,24)"/><text x="0.6886%" y="623.50"></text></g><g><title>raytracer::camera::Camera::get_ray (1 samples, 0.44%)</title><rect x="1.7544%" y="613" width="0.4386%" height="15" fill="rgb(221,193,54)"/><text x="2.0044%" y="623.50"></text></g><g><title>rand::Rng::gen (1 samples, 0.44%)</title><rect x="1.7544%" y="597" width="0.4386%" height="15" fill="rgb(248,212,6)"/><text x="2.0044%" y="607.50"></text></g><g><title>raytracer::scene::World::get_hit (3 samples, 1.32%)</title><rect x="3.0702%" y="597" width="1.3158%" height="15" fill="rgb(208,68,35)"/><text x="3.3202%" y="607.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (3 samples, 1.32%)</title><rect x="3.0702%" y="581" width="1.3158%" height="15" fill="rgb(232,128,0)"/><text x="3.3202%" y="591.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (3 samples, 1.32%)</title><rect x="3.0702%" y="565" width="1.3158%" height="15" fill="rgb(207,160,47)"/><text x="3.3202%" y="575.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold::ok::{{closure}} (3 samples, 1.32%)</title><rect x="3.0702%" y="549" width="1.3158%" height="15" fill="rgb(228,23,34)"/><text x="3.3202%" y="559.50"></text></g><g><title>raytracer::scene::World::get_hit::{{closure}} (3 samples, 1.32%)</title><rect x="3.0702%" y="533" width="1.3158%" height="15" fill="rgb(218,30,26)"/><text x="3.3202%" y="543.50"></text></g><g><title>[[stack]] (16 samples, 7.02%)</title><rect x="0.0000%" y="629" width="7.0175%" height="15" fill="rgb(220,122,19)"/><text x="0.2500%" y="639.50">[[stack]]</text></g><g><title>raytracer::scene::World::get_ray_color (11 samples, 4.82%)</title><rect x="2.1930%" y="613" width="4.8246%" height="15" fill="rgb(250,228,42)"/><text x="2.4430%" y="623.50">raytra..</text></g><g><title>raytracer::scene::random_in_unit_sphere (6 samples, 2.63%)</title><rect x="4.3860%" y="597" width="2.6316%" height="15" fill="rgb(240,193,28)"/><text x="4.6360%" y="607.50">ra..</text></g><g><title>rand::random (6 samples, 2.63%)</title><rect x="4.3860%" y="581" width="2.6316%" height="15" fill="rgb(216,20,37)"/><text x="4.6360%" y="591.50">ra..</text></g><g><title>rand::Rng::gen (1 samples, 0.44%)</title><rect x="6.5789%" y="565" width="0.4386%" height="15" fill="rgb(206,188,39)"/><text x="6.8289%" y="575.50"></text></g><g><title>[anon] (1 samples, 0.44%)</title><rect x="7.0175%" y="629" width="0.4386%" height="15" fill="rgb(217,207,13)"/><text x="7.2675%" y="639.50"></text></g><g><title>raytracer::scene::World::get_ray_color (1 samples, 0.44%)</title><rect x="7.0175%" y="613" width="0.4386%" height="15" fill="rgb(231,73,38)"/><text x="7.2675%" y="623.50"></text></g><g><title>&lt;raytracer::scene::objects::Sphere as raytracer::scene::Hittable&gt;::get_hits (1 samples, 0.44%)</title><rect x="7.4561%" y="613" width="0.4386%" height="15" fill="rgb(225,20,46)"/><text x="7.7061%" y="623.50"></text></g><g><title>[raytracer] (1 samples, 0.44%)</title><rect x="7.8947%" y="613" width="0.4386%" height="15" fill="rgb(210,31,41)"/><text x="8.1447%" y="623.50"></text></g><g><title>rand::distributions::float::&lt;impl rand::distributions::Distribution&lt;f64&gt; for rand::distributions::Standard&gt;::sample (1 samples, 0.44%)</title><rect x="7.8947%" y="597" width="0.4386%" height="15" fill="rgb(221,200,47)"/><text x="8.1447%" y="607.50"></text></g><g><title>rand::distributions::float::&lt;impl rand::distributions::Distribution&lt;f64&gt; for rand::distributions::Standard&gt;::sample (2 samples, 0.88%)</title><rect x="8.3333%" y="613" width="0.8772%" height="15" fill="rgb(226,26,5)"/><text x="8.5833%" y="623.50"></text></g><g><title>rand::rngs::adapter::reseeding::fork::get_fork_counter (1 samples, 0.44%)</title><rect x="9.2105%" y="613" width="0.4386%" height="15" fill="rgb(249,33,26)"/><text x="9.4605%" y="623.50"></text></g><g><title>rand::rngs::thread::thread_rng (2 samples, 0.88%)</title><rect x="9.6491%" y="613" width="0.8772%" height="15" fill="rgb(235,183,28)"/><text x="9.8991%" y="623.50"></text></g><g><title>[unknown] (8 samples, 3.51%)</title><rect x="7.4561%" y="629" width="3.5088%" height="15" fill="rgb(221,5,38)"/><text x="7.7061%" y="639.50">[un..</text></g><g><title>raytracer::scene::World::get_ray_color (1 samples, 0.44%)</title><rect x="10.5263%" y="613" width="0.4386%" height="15" fill="rgb(247,18,42)"/><text x="10.7763%" y="623.50"></text></g><g><title>raytracer::scene::World::get_ray_color (1 samples, 0.44%)</title><rect x="10.5263%" y="597" width="0.4386%" height="15" fill="rgb(241,131,45)"/><text x="10.7763%" y="607.50"></text></g><g><title>raytracer::scene::World::get_ray_color (1 samples, 0.44%)</title><rect x="10.5263%" y="581" width="0.4386%" height="15" fill="rgb(249,31,29)"/><text x="10.7763%" y="591.50"></text></g><g><title>raytracer::scene::World::get_ray_color (1 samples, 0.44%)</title><rect x="10.5263%" y="565" width="0.4386%" height="15" fill="rgb(225,111,53)"/><text x="10.7763%" y="575.50"></text></g><g><title>raytracer::scene::World::get_ray_color (1 samples, 0.44%)</title><rect x="10.5263%" y="549" width="0.4386%" height="15" fill="rgb(238,160,17)"/><text x="10.7763%" y="559.50"></text></g><g><title>raytracer::scene::World::get_ray_color (1 samples, 0.44%)</title><rect x="10.5263%" y="533" width="0.4386%" height="15" fill="rgb(214,148,48)"/><text x="10.7763%" y="543.50"></text></g><g><title>raytracer::scene::World::get_ray_color (1 samples, 0.44%)</title><rect x="10.5263%" y="517" width="0.4386%" height="15" fill="rgb(232,36,49)"/><text x="10.7763%" y="527.50"></text></g><g><title>raytracer::scene::World::get_ray_color (1 samples, 0.44%)</title><rect x="10.5263%" y="501" width="0.4386%" height="15" fill="rgb(209,103,24)"/><text x="10.7763%" y="511.50"></text></g><g><title>raytracer::scene::World::get_ray_color (1 samples, 0.44%)</title><rect x="10.5263%" y="485" width="0.4386%" height="15" fill="rgb(229,88,8)"/><text x="10.7763%" y="495.50"></text></g><g><title>raytracer::scene::World::get_ray_color (1 samples, 0.44%)</title><rect x="10.5263%" y="469" width="0.4386%" height="15" fill="rgb(213,181,19)"/><text x="10.7763%" y="479.50"></text></g><g><title>raytracer::scene::World::get_ray_color (1 samples, 0.44%)</title><rect x="10.5263%" y="453" width="0.4386%" height="15" fill="rgb(254,191,54)"/><text x="10.7763%" y="463.50"></text></g><g><title>raytracer::scene::World::get_ray_color (1 samples, 0.44%)</title><rect x="10.5263%" y="437" width="0.4386%" height="15" fill="rgb(241,83,37)"/><text x="10.7763%" y="447.50"></text></g><g><title>raytracer::scene::World::get_ray_color (1 samples, 0.44%)</title><rect x="10.5263%" y="421" width="0.4386%" height="15" fill="rgb(233,36,39)"/><text x="10.7763%" y="431.50"></text></g><g><title>raytracer::scene::World::get_ray_color (1 samples, 0.44%)</title><rect x="10.5263%" y="405" width="0.4386%" height="15" fill="rgb(226,3,54)"/><text x="10.7763%" y="415.50"></text></g><g><title>raytracer::scene::World::get_ray_color (1 samples, 0.44%)</title><rect x="10.5263%" y="389" width="0.4386%" height="15" fill="rgb(245,192,40)"/><text x="10.7763%" y="399.50"></text></g><g><title>raytracer::scene::World::get_ray_color (1 samples, 0.44%)</title><rect x="10.5263%" y="373" width="0.4386%" height="15" fill="rgb(238,167,29)"/><text x="10.7763%" y="383.50"></text></g><g><title>raytracer::scene::World::get_ray_color (1 samples, 0.44%)</title><rect x="10.5263%" y="357" width="0.4386%" height="15" fill="rgb(232,182,51)"/><text x="10.7763%" y="367.50"></text></g><g><title>raytracer::scene::World::get_ray_color (1 samples, 0.44%)</title><rect x="10.5263%" y="341" width="0.4386%" height="15" fill="rgb(231,60,39)"/><text x="10.7763%" y="351.50"></text></g><g><title>raytracer::scene::World::get_ray_color (1 samples, 0.44%)</title><rect x="10.5263%" y="325" width="0.4386%" height="15" fill="rgb(208,69,12)"/><text x="10.7763%" y="335.50"></text></g><g><title>raytracer::scene::World::get_ray_color (1 samples, 0.44%)</title><rect x="10.5263%" y="309" width="0.4386%" height="15" fill="rgb(235,93,37)"/><text x="10.7763%" y="319.50"></text></g><g><title>raytracer::scene::World::get_ray_color (1 samples, 0.44%)</title><rect x="10.5263%" y="293" width="0.4386%" height="15" fill="rgb(213,116,39)"/><text x="10.7763%" y="303.50"></text></g><g><title>raytracer::scene::World::get_ray_color (1 samples, 0.44%)</title><rect x="10.5263%" y="277" width="0.4386%" height="15" fill="rgb(222,207,29)"/><text x="10.7763%" y="287.50"></text></g><g><title>raytracer::scene::World::get_ray_color (1 samples, 0.44%)</title><rect x="10.5263%" y="261" width="0.4386%" height="15" fill="rgb(206,96,30)"/><text x="10.7763%" y="271.50"></text></g><g><title>raytracer::scene::World::get_ray_color (1 samples, 0.44%)</title><rect x="10.5263%" y="245" width="0.4386%" height="15" fill="rgb(218,138,4)"/><text x="10.7763%" y="255.50"></text></g><g><title>raytracer::scene::World::get_ray_color (1 samples, 0.44%)</title><rect x="10.5263%" y="229" width="0.4386%" height="15" fill="rgb(250,191,14)"/><text x="10.7763%" y="239.50"></text></g><g><title>raytracer::scene::World::get_ray_color (1 samples, 0.44%)</title><rect x="10.5263%" y="213" width="0.4386%" height="15" fill="rgb(239,60,40)"/><text x="10.7763%" y="223.50"></text></g><g><title>raytracer::scene::World::get_ray_color (1 samples, 0.44%)</title><rect x="10.5263%" y="197" width="0.4386%" height="15" fill="rgb(206,27,48)"/><text x="10.7763%" y="207.50"></text></g><g><title>raytracer::scene::World::get_ray_color (1 samples, 0.44%)</title><rect x="10.5263%" y="181" width="0.4386%" height="15" fill="rgb(225,35,8)"/><text x="10.7763%" y="191.50"></text></g><g><title>raytracer::scene::World::get_ray_color (1 samples, 0.44%)</title><rect x="10.5263%" y="165" width="0.4386%" height="15" fill="rgb(250,213,24)"/><text x="10.7763%" y="175.50"></text></g><g><title>raytracer::scene::random_in_unit_sphere (1 samples, 0.44%)</title><rect x="10.5263%" y="149" width="0.4386%" height="15" fill="rgb(247,123,22)"/><text x="10.7763%" y="159.50"></text></g><g><title>&lt;raytracer::geometry::Direction as core::ops::arith::Sub&gt;::sub (1 samples, 0.44%)</title><rect x="10.5263%" y="133" width="0.4386%" height="15" fill="rgb(231,138,38)"/><text x="10.7763%" y="143.50"></text></g><g><title>&lt;raytracer::color::Color as core::ops::arith::Add&gt;::add (10 samples, 4.39%)</title><rect x="12.7193%" y="469" width="4.3860%" height="15" fill="rgb(231,145,46)"/><text x="12.9693%" y="479.50">&lt;rayt..</text></g><g><title>core::result::Result&lt;T,E&gt;::unwrap (4 samples, 1.75%)</title><rect x="17.1053%" y="469" width="1.7544%" height="15" fill="rgb(251,118,11)"/><text x="17.3553%" y="479.50"></text></g><g><title>&lt;raytracer::geometry::Location as core::ops::arith::Add&lt;raytracer::geometry::Direction&gt;&gt;::add (3 samples, 1.32%)</title><rect x="20.6140%" y="453" width="1.3158%" height="15" fill="rgb(217,147,25)"/><text x="20.8640%" y="463.50"></text></g><g><title>&lt;raytracer::geometry::Location as core::ops::arith::Sub&lt;raytracer::geometry::Direction&gt;&gt;::sub (1 samples, 0.44%)</title><rect x="21.9298%" y="453" width="0.4386%" height="15" fill="rgb(247,81,37)"/><text x="22.1798%" y="463.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x4_avx2&lt;NI&gt; as core::ops::arith::AddAssign&gt;::add_assign (4 samples, 1.75%)</title><rect x="23.6842%" y="197" width="1.7544%" height="15" fill="rgb(209,12,38)"/><text x="23.9342%" y="207.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x4_avx2&lt;NI&gt; as core::ops::arith::Add&gt;::add (4 samples, 1.75%)</title><rect x="23.6842%" y="181" width="1.7544%" height="15" fill="rgb(227,1,9)"/><text x="23.9342%" y="191.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (4 samples, 1.75%)</title><rect x="23.6842%" y="165" width="1.7544%" height="15" fill="rgb(248,47,43)"/><text x="23.9342%" y="175.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x4_avx2&lt;NI&gt; as ppv_lite86::types::RotateEachWord32&gt;::rotate_each_word_right16 (1 samples, 0.44%)</title><rect x="25.4386%" y="197" width="0.4386%" height="15" fill="rgb(221,10,30)"/><text x="25.6886%" y="207.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi8 (1 samples, 0.44%)</title><rect x="25.4386%" y="181" width="0.4386%" height="15" fill="rgb(210,229,1)"/><text x="25.6886%" y="191.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x4_avx2&lt;NI&gt; as ppv_lite86::types::RotateEachWord32&gt;::rotate_each_word_right20 (2 samples, 0.88%)</title><rect x="25.8772%" y="197" width="0.8772%" height="15" fill="rgb(222,148,37)"/><text x="26.1272%" y="207.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_or_si256 (2 samples, 0.88%)</title><rect x="25.8772%" y="181" width="0.8772%" height="15" fill="rgb(234,67,33)"/><text x="26.1272%" y="191.50"></text></g><g><title>rand_chacha::guts::round (8 samples, 3.51%)</title><rect x="23.6842%" y="213" width="3.5088%" height="15" fill="rgb(247,98,35)"/><text x="23.9342%" y="223.50">ran..</text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x4_avx2&lt;NI&gt; as ppv_lite86::types::RotateEachWord32&gt;::rotate_each_word_right25 (1 samples, 0.44%)</title><rect x="26.7544%" y="197" width="0.4386%" height="15" fill="rgb(247,138,52)"/><text x="27.0044%" y="207.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_or_si256 (1 samples, 0.44%)</title><rect x="26.7544%" y="181" width="0.4386%" height="15" fill="rgb(213,79,30)"/><text x="27.0044%" y="191.50"></text></g><g><title>rand::Rng::gen (12 samples, 5.26%)</title><rect x="22.3684%" y="453" width="5.2632%" height="15" fill="rgb(246,177,23)"/><text x="22.6184%" y="463.50">rand::..</text></g><g><title>rand::distributions::float::&lt;impl rand::distributions::Distribution&lt;f64&gt; for rand::distributions::Standard&gt;::sample (12 samples, 5.26%)</title><rect x="22.3684%" y="437" width="5.2632%" height="15" fill="rgb(230,62,27)"/><text x="22.6184%" y="447.50">rand::..</text></g><g><title>rand::Rng::gen (10 samples, 4.39%)</title><rect x="23.2456%" y="421" width="4.3860%" height="15" fill="rgb(216,154,8)"/><text x="23.4956%" y="431.50">rand:..</text></g><g><title>rand::distributions::integer::&lt;impl rand::distributions::Distribution&lt;u64&gt; for rand::distributions::Standard&gt;::sample (10 samples, 4.39%)</title><rect x="23.2456%" y="405" width="4.3860%" height="15" fill="rgb(244,35,45)"/><text x="23.4956%" y="415.50">rand:..</text></g><g><title>&lt;rand::rngs::thread::ThreadRng as rand_core::RngCore&gt;::next_u64 (10 samples, 4.39%)</title><rect x="23.2456%" y="389" width="4.3860%" height="15" fill="rgb(251,115,12)"/><text x="23.4956%" y="399.50">&lt;rand..</text></g><g><title>&lt;rand::rngs::adapter::reseeding::ReseedingRng&lt;R,Rsdr&gt; as rand_core::RngCore&gt;::next_u64 (10 samples, 4.39%)</title><rect x="23.2456%" y="373" width="4.3860%" height="15" fill="rgb(240,54,50)"/><text x="23.4956%" y="383.50">&lt;rand..</text></g><g><title>&lt;rand_core::block::BlockRng&lt;R&gt; as rand_core::RngCore&gt;::next_u64 (10 samples, 4.39%)</title><rect x="23.2456%" y="357" width="4.3860%" height="15" fill="rgb(233,84,52)"/><text x="23.4956%" y="367.50">&lt;rand..</text></g><g><title>rand_core::block::BlockRng&lt;R&gt;::generate_and_set (9 samples, 3.95%)</title><rect x="23.6842%" y="341" width="3.9474%" height="15" fill="rgb(207,117,47)"/><text x="23.9342%" y="351.50">rand..</text></g><g><title>&lt;rand::rngs::adapter::reseeding::ReseedingCore&lt;R,Rsdr&gt; as rand_core::block::BlockRngCore&gt;::generate (9 samples, 3.95%)</title><rect x="23.6842%" y="325" width="3.9474%" height="15" fill="rgb(249,43,39)"/><text x="23.9342%" y="335.50">&lt;ran..</text></g><g><title>&lt;rand_chacha::chacha::ChaCha20Core as rand_core::block::BlockRngCore&gt;::generate (9 samples, 3.95%)</title><rect x="23.6842%" y="309" width="3.9474%" height="15" fill="rgb(209,38,44)"/><text x="23.9342%" y="319.50">&lt;ran..</text></g><g><title>rand_chacha::guts::ChaCha::refill4 (9 samples, 3.95%)</title><rect x="23.6842%" y="293" width="3.9474%" height="15" fill="rgb(236,212,23)"/><text x="23.9342%" y="303.50">rand..</text></g><g><title>rand_chacha::guts::refill_wide (9 samples, 3.95%)</title><rect x="23.6842%" y="277" width="3.9474%" height="15" fill="rgb(242,79,21)"/><text x="23.9342%" y="287.50">rand..</text></g><g><title>rand_chacha::guts::refill_wide::impl_avx2 (9 samples, 3.95%)</title><rect x="23.6842%" y="261" width="3.9474%" height="15" fill="rgb(211,96,35)"/><text x="23.9342%" y="271.50">rand..</text></g><g><title>rand_chacha::guts::refill_wide::fn_impl (9 samples, 3.95%)</title><rect x="23.6842%" y="245" width="3.9474%" height="15" fill="rgb(253,215,40)"/><text x="23.9342%" y="255.50">rand..</text></g><g><title>rand_chacha::guts::refill_wide_impl (9 samples, 3.95%)</title><rect x="23.6842%" y="229" width="3.9474%" height="15" fill="rgb(211,81,21)"/><text x="23.9342%" y="239.50">rand..</text></g><g><title>rand_chacha::guts::undiagonalize (1 samples, 0.44%)</title><rect x="27.1930%" y="213" width="0.4386%" height="15" fill="rgb(208,190,38)"/><text x="27.4430%" y="223.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x4_avx2&lt;NI&gt; as ppv_lite86::types::types::LaneWords4&gt;::shuffle_lane_words1230 (1 samples, 0.44%)</title><rect x="27.1930%" y="197" width="0.4386%" height="15" fill="rgb(235,213,38)"/><text x="27.4430%" y="207.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi32 (1 samples, 0.44%)</title><rect x="27.1930%" y="181" width="0.4386%" height="15" fill="rgb(237,122,38)"/><text x="27.4430%" y="191.50"></text></g><g><title>&lt;raytracer::geometry::Direction as core::ops::arith::Div&lt;f64&gt;&gt;::div (8 samples, 3.51%)</title><rect x="27.6316%" y="437" width="3.5088%" height="15" fill="rgb(244,218,35)"/><text x="27.8816%" y="447.50">&lt;ra..</text></g><g><title>raytracer::camera::Camera::get_ray (33 samples, 14.47%)</title><rect x="18.8596%" y="469" width="14.4737%" height="15" fill="rgb(240,68,47)"/><text x="19.1096%" y="479.50">raytracer::camera::Cam..</text></g><g><title>raytracer::geometry::Direction::norm (13 samples, 5.70%)</title><rect x="27.6316%" y="453" width="5.7018%" height="15" fill="rgb(210,16,53)"/><text x="27.8816%" y="463.50">raytrac..</text></g><g><title>raytracer::geometry::Direction::length (5 samples, 2.19%)</title><rect x="31.1404%" y="437" width="2.1930%" height="15" fill="rgb(235,124,12)"/><text x="31.3904%" y="447.50">r..</text></g><g><title>std::f64::&lt;impl f64&gt;::sqrt (4 samples, 1.75%)</title><rect x="31.5789%" y="421" width="1.7544%" height="15" fill="rgb(224,169,11)"/><text x="31.8289%" y="431.50"></text></g><g><title>raytracer::main (1 samples, 0.44%)</title><rect x="33.3333%" y="469" width="0.4386%" height="15" fill="rgb(250,166,2)"/><text x="33.5833%" y="479.50"></text></g><g><title>&lt;raytracer::color::Color as core::ops::arith::Mul&lt;f64&gt;&gt;::mul (1 samples, 0.44%)</title><rect x="34.6491%" y="453" width="0.4386%" height="15" fill="rgb(242,216,29)"/><text x="34.8991%" y="463.50"></text></g><g><title>&lt;raytracer::geometry::Direction as core::ops::arith::Mul&lt;f64&gt;&gt;::mul (1 samples, 0.44%)</title><rect x="35.0877%" y="453" width="0.4386%" height="15" fill="rgb(230,116,27)"/><text x="35.3377%" y="463.50"></text></g><g><title>&lt;raytracer::geometry::Direction as core::ops::arith::Div&lt;f64&gt;&gt;::div (4 samples, 1.75%)</title><rect x="35.5263%" y="437" width="1.7544%" height="15" fill="rgb(228,99,48)"/><text x="35.7763%" y="447.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::powi (1 samples, 0.44%)</title><rect x="37.7193%" y="421" width="0.4386%" height="15" fill="rgb(253,11,6)"/><text x="37.9693%" y="431.50"></text></g><g><title>raytracer::geometry::Direction::norm (7 samples, 3.07%)</title><rect x="35.5263%" y="453" width="3.0702%" height="15" fill="rgb(247,143,39)"/><text x="35.7763%" y="463.50">ray..</text></g><g><title>raytracer::geometry::Direction::length (3 samples, 1.32%)</title><rect x="37.2807%" y="437" width="1.3158%" height="15" fill="rgb(236,97,10)"/><text x="37.5307%" y="447.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::sqrt (1 samples, 0.44%)</title><rect x="38.1579%" y="421" width="0.4386%" height="15" fill="rgb(233,208,19)"/><text x="38.4079%" y="431.50"></text></g><g><title>&lt;raytracer::geometry::Direction as core::ops::arith::Add&gt;::add (1 samples, 0.44%)</title><rect x="42.9825%" y="357" width="0.4386%" height="15" fill="rgb(216,164,2)"/><text x="43.2325%" y="367.50"></text></g><g><title>&lt;raytracer::geometry::Direction as core::ops::arith::Mul&lt;f64&gt;&gt;::mul (2 samples, 0.88%)</title><rect x="43.4211%" y="357" width="0.8772%" height="15" fill="rgb(220,129,5)"/><text x="43.6711%" y="367.50"></text></g><g><title>raytracer::geometry::Direction::dot (4 samples, 1.75%)</title><rect x="44.2982%" y="357" width="1.7544%" height="15" fill="rgb(242,17,10)"/><text x="44.5482%" y="367.50"></text></g><g><title>raytracer::geometry::Direction::length (1 samples, 0.44%)</title><rect x="46.0526%" y="357" width="0.4386%" height="15" fill="rgb(242,107,0)"/><text x="46.3026%" y="367.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::sqrt (1 samples, 0.44%)</title><rect x="46.0526%" y="341" width="0.4386%" height="15" fill="rgb(251,28,31)"/><text x="46.3026%" y="351.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::powi (3 samples, 1.32%)</title><rect x="46.4912%" y="357" width="1.3158%" height="15" fill="rgb(233,223,10)"/><text x="46.7412%" y="367.50"></text></g><g><title>raytracer::scene::World::get_hit (24 samples, 10.53%)</title><rect x="38.5965%" y="453" width="10.5263%" height="15" fill="rgb(215,21,27)"/><text x="38.8465%" y="463.50">raytracer::scen..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (24 samples, 10.53%)</title><rect x="38.5965%" y="437" width="10.5263%" height="15" fill="rgb(232,23,21)"/><text x="38.8465%" y="447.50">core::iter::tra..</text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (24 samples, 10.53%)</title><rect x="38.5965%" y="421" width="10.5263%" height="15" fill="rgb(244,5,23)"/><text x="38.8465%" y="431.50">core::iter::tra..</text></g><g><title>core::iter::traits::iterator::Iterator::fold::ok::{{closure}} (24 samples, 10.53%)</title><rect x="38.5965%" y="405" width="10.5263%" height="15" fill="rgb(226,81,46)"/><text x="38.8465%" y="415.50">core::iter::tra..</text></g><g><title>raytracer::scene::World::get_hit::{{closure}} (24 samples, 10.53%)</title><rect x="38.5965%" y="389" width="10.5263%" height="15" fill="rgb(247,70,30)"/><text x="38.8465%" y="399.50">raytracer::scen..</text></g><g><title>&lt;raytracer::scene::objects::Sphere as raytracer::scene::Hittable&gt;::get_hits (21 samples, 9.21%)</title><rect x="39.9123%" y="373" width="9.2105%" height="15" fill="rgb(212,68,19)"/><text x="40.1623%" y="383.50">&lt;raytracer::s..</text></g><g><title>std::f64::&lt;impl f64&gt;::sqrt (3 samples, 1.32%)</title><rect x="47.8070%" y="357" width="1.3158%" height="15" fill="rgb(240,187,13)"/><text x="48.0570%" y="367.50"></text></g><g><title>&lt;raytracer::geometry::Direction as core::ops::arith::Div&lt;f64&gt;&gt;::div (2 samples, 0.88%)</title><rect x="51.3158%" y="421" width="0.8772%" height="15" fill="rgb(223,113,26)"/><text x="51.5658%" y="431.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::powi (1 samples, 0.44%)</title><rect x="52.1930%" y="405" width="0.4386%" height="15" fill="rgb(206,192,2)"/><text x="52.4430%" y="415.50"></text></g><g><title>raytracer::geometry::Direction::norm (4 samples, 1.75%)</title><rect x="51.3158%" y="437" width="1.7544%" height="15" fill="rgb(241,108,4)"/><text x="51.5658%" y="447.50"></text></g><g><title>raytracer::geometry::Direction::length (2 samples, 0.88%)</title><rect x="52.1930%" y="421" width="0.8772%" height="15" fill="rgb(247,173,49)"/><text x="52.4430%" y="431.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::sqrt (1 samples, 0.44%)</title><rect x="52.6316%" y="405" width="0.4386%" height="15" fill="rgb(224,114,35)"/><text x="52.8816%" y="415.50"></text></g><g><title>&lt;raytracer::geometry::Direction as core::ops::arith::Mul&lt;f64&gt;&gt;::mul (4 samples, 1.75%)</title><rect x="57.0175%" y="341" width="1.7544%" height="15" fill="rgb(245,159,27)"/><text x="57.2675%" y="351.50"></text></g><g><title>raytracer::geometry::Direction::dot (5 samples, 2.19%)</title><rect x="58.7719%" y="341" width="2.1930%" height="15" fill="rgb(245,172,44)"/><text x="59.0219%" y="351.50">r..</text></g><g><title>std::f64::&lt;impl f64&gt;::powi (1 samples, 0.44%)</title><rect x="60.9649%" y="325" width="0.4386%" height="15" fill="rgb(236,23,11)"/><text x="61.2149%" y="335.50"></text></g><g><title>raytracer::geometry::Direction::length (3 samples, 1.32%)</title><rect x="60.9649%" y="341" width="1.3158%" height="15" fill="rgb(205,117,38)"/><text x="61.2149%" y="351.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::sqrt (2 samples, 0.88%)</title><rect x="61.4035%" y="325" width="0.8772%" height="15" fill="rgb(237,72,25)"/><text x="61.6535%" y="335.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (25 samples, 10.96%)</title><rect x="53.0702%" y="421" width="10.9649%" height="15" fill="rgb(244,70,9)"/><text x="53.3202%" y="431.50">core::iter::trai..</text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (25 samples, 10.96%)</title><rect x="53.0702%" y="405" width="10.9649%" height="15" fill="rgb(217,125,39)"/><text x="53.3202%" y="415.50">core::iter::trai..</text></g><g><title>core::iter::traits::iterator::Iterator::fold::ok::{{closure}} (25 samples, 10.96%)</title><rect x="53.0702%" y="389" width="10.9649%" height="15" fill="rgb(235,36,10)"/><text x="53.3202%" y="399.50">core::iter::trai..</text></g><g><title>raytracer::scene::World::get_hit::{{closure}} (25 samples, 10.96%)</title><rect x="53.0702%" y="373" width="10.9649%" height="15" fill="rgb(251,123,47)"/><text x="53.3202%" y="383.50">raytracer::scene..</text></g><g><title>&lt;raytracer::scene::objects::Sphere as raytracer::scene::Hittable&gt;::get_hits (22 samples, 9.65%)</title><rect x="54.3860%" y="357" width="9.6491%" height="15" fill="rgb(221,13,13)"/><text x="54.6360%" y="367.50">&lt;raytracer::sc..</text></g><g><title>std::f64::&lt;impl f64&gt;::sqrt (4 samples, 1.75%)</title><rect x="62.2807%" y="341" width="1.7544%" height="15" fill="rgb(238,131,9)"/><text x="62.5307%" y="351.50"></text></g><g><title>raytracer::scene::World::get_hit (26 samples, 11.40%)</title><rect x="53.0702%" y="437" width="11.4035%" height="15" fill="rgb(211,50,8)"/><text x="53.3202%" y="447.50">raytracer::scene:..</text></g><g><title>core::slice::&lt;impl [T]&gt;::iter (1 samples, 0.44%)</title><rect x="64.0351%" y="421" width="0.4386%" height="15" fill="rgb(245,182,24)"/><text x="64.2851%" y="431.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (1 samples, 0.44%)</title><rect x="64.0351%" y="405" width="0.4386%" height="15" fill="rgb(242,14,37)"/><text x="64.2851%" y="415.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (1 samples, 0.44%)</title><rect x="64.0351%" y="389" width="0.4386%" height="15" fill="rgb(246,228,12)"/><text x="64.2851%" y="399.50"></text></g><g><title>&lt;raytracer::geometry::Direction as core::ops::arith::Div&lt;f64&gt;&gt;::div (1 samples, 0.44%)</title><rect x="65.3509%" y="405" width="0.4386%" height="15" fill="rgb(213,55,15)"/><text x="65.6009%" y="415.50"></text></g><g><title>raytracer::geometry::Direction::norm (2 samples, 0.88%)</title><rect x="65.3509%" y="421" width="0.8772%" height="15" fill="rgb(209,9,3)"/><text x="65.6009%" y="431.50"></text></g><g><title>raytracer::geometry::Direction::length (1 samples, 0.44%)</title><rect x="65.7895%" y="405" width="0.4386%" height="15" fill="rgb(230,59,30)"/><text x="66.0395%" y="415.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::powi (1 samples, 0.44%)</title><rect x="65.7895%" y="389" width="0.4386%" height="15" fill="rgb(209,121,21)"/><text x="66.0395%" y="399.50"></text></g><g><title>&lt;raytracer::geometry::Location as core::ops::arith::Sub&gt;::sub (1 samples, 0.44%)</title><rect x="67.1053%" y="325" width="0.4386%" height="15" fill="rgb(220,109,13)"/><text x="67.3553%" y="335.50"></text></g><g><title>raytracer::scene::World::get_hit (5 samples, 2.19%)</title><rect x="66.2281%" y="421" width="2.1930%" height="15" fill="rgb(232,18,1)"/><text x="66.4781%" y="431.50">r..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (5 samples, 2.19%)</title><rect x="66.2281%" y="405" width="2.1930%" height="15" fill="rgb(215,41,42)"/><text x="66.4781%" y="415.50">c..</text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (5 samples, 2.19%)</title><rect x="66.2281%" y="389" width="2.1930%" height="15" fill="rgb(224,123,36)"/><text x="66.4781%" y="399.50">c..</text></g><g><title>core::iter::traits::iterator::Iterator::fold::ok::{{closure}} (5 samples, 2.19%)</title><rect x="66.2281%" y="373" width="2.1930%" height="15" fill="rgb(240,125,3)"/><text x="66.4781%" y="383.50">c..</text></g><g><title>raytracer::scene::World::get_hit::{{closure}} (5 samples, 2.19%)</title><rect x="66.2281%" y="357" width="2.1930%" height="15" fill="rgb(205,98,50)"/><text x="66.4781%" y="367.50">r..</text></g><g><title>&lt;raytracer::scene::objects::Sphere as raytracer::scene::Hittable&gt;::get_hits (5 samples, 2.19%)</title><rect x="66.2281%" y="341" width="2.1930%" height="15" fill="rgb(205,185,37)"/><text x="66.4781%" y="351.50">&lt;..</text></g><g><title>std::f64::&lt;impl f64&gt;::powi (2 samples, 0.88%)</title><rect x="67.5439%" y="325" width="0.8772%" height="15" fill="rgb(238,207,15)"/><text x="67.7939%" y="335.50"></text></g><g><title>&lt;raytracer::geometry::Direction as core::ops::arith::Div&lt;f64&gt;&gt;::div (1 samples, 0.44%)</title><rect x="69.2982%" y="389" width="0.4386%" height="15" fill="rgb(213,199,42)"/><text x="69.5482%" y="399.50"></text></g><g><title>raytracer::geometry::Direction::norm (2 samples, 0.88%)</title><rect x="69.2982%" y="405" width="0.8772%" height="15" fill="rgb(235,201,11)"/><text x="69.5482%" y="415.50"></text></g><g><title>raytracer::geometry::Direction::length (1 samples, 0.44%)</title><rect x="69.7368%" y="389" width="0.4386%" height="15" fill="rgb(207,46,11)"/><text x="69.9868%" y="399.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::powi (1 samples, 0.44%)</title><rect x="69.7368%" y="373" width="0.4386%" height="15" fill="rgb(241,35,35)"/><text x="69.9868%" y="383.50"></text></g><g><title>raytracer::geometry::Direction::dot (1 samples, 0.44%)</title><rect x="70.6140%" y="309" width="0.4386%" height="15" fill="rgb(243,32,47)"/><text x="70.8640%" y="319.50"></text></g><g><title>raytracer::scene::World::get_hit (3 samples, 1.32%)</title><rect x="70.1754%" y="405" width="1.3158%" height="15" fill="rgb(247,202,23)"/><text x="70.4254%" y="415.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (3 samples, 1.32%)</title><rect x="70.1754%" y="389" width="1.3158%" height="15" fill="rgb(219,102,11)"/><text x="70.4254%" y="399.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (3 samples, 1.32%)</title><rect x="70.1754%" y="373" width="1.3158%" height="15" fill="rgb(243,110,44)"/><text x="70.4254%" y="383.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold::ok::{{closure}} (3 samples, 1.32%)</title><rect x="70.1754%" y="357" width="1.3158%" height="15" fill="rgb(222,74,54)"/><text x="70.4254%" y="367.50"></text></g><g><title>raytracer::scene::World::get_hit::{{closure}} (3 samples, 1.32%)</title><rect x="70.1754%" y="341" width="1.3158%" height="15" fill="rgb(216,99,12)"/><text x="70.4254%" y="351.50"></text></g><g><title>&lt;raytracer::scene::objects::Sphere as raytracer::scene::Hittable&gt;::get_hits (2 samples, 0.88%)</title><rect x="70.6140%" y="325" width="0.8772%" height="15" fill="rgb(226,22,26)"/><text x="70.8640%" y="335.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::sqrt (1 samples, 0.44%)</title><rect x="71.0526%" y="309" width="0.4386%" height="15" fill="rgb(217,163,10)"/><text x="71.3026%" y="319.50"></text></g><g><title>raytracer::geometry::Direction::norm (1 samples, 0.44%)</title><rect x="71.4912%" y="389" width="0.4386%" height="15" fill="rgb(213,25,53)"/><text x="71.7412%" y="399.50"></text></g><g><title>raytracer::geometry::Direction::length (1 samples, 0.44%)</title><rect x="71.4912%" y="373" width="0.4386%" height="15" fill="rgb(252,105,26)"/><text x="71.7412%" y="383.50"></text></g><g><title>raytracer::scene::World::get_hit (1 samples, 0.44%)</title><rect x="71.9298%" y="389" width="0.4386%" height="15" fill="rgb(220,39,43)"/><text x="72.1798%" y="399.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.44%)</title><rect x="71.9298%" y="373" width="0.4386%" height="15" fill="rgb(229,68,48)"/><text x="72.1798%" y="383.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.44%)</title><rect x="71.9298%" y="357" width="0.4386%" height="15" fill="rgb(252,8,32)"/><text x="72.1798%" y="367.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold::ok::{{closure}} (1 samples, 0.44%)</title><rect x="71.9298%" y="341" width="0.4386%" height="15" fill="rgb(223,20,43)"/><text x="72.1798%" y="351.50"></text></g><g><title>raytracer::scene::World::get_hit::{{closure}} (1 samples, 0.44%)</title><rect x="71.9298%" y="325" width="0.4386%" height="15" fill="rgb(229,81,49)"/><text x="72.1798%" y="335.50"></text></g><g><title>&lt;raytracer::scene::objects::Sphere as raytracer::scene::Hittable&gt;::get_hits (1 samples, 0.44%)</title><rect x="71.9298%" y="309" width="0.4386%" height="15" fill="rgb(236,28,36)"/><text x="72.1798%" y="319.50"></text></g><g><title>raytracer::scene::World::get_hit (4 samples, 1.75%)</title><rect x="72.8070%" y="373" width="1.7544%" height="15" fill="rgb(249,185,26)"/><text x="73.0570%" y="383.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (4 samples, 1.75%)</title><rect x="72.8070%" y="357" width="1.7544%" height="15" fill="rgb(249,174,33)"/><text x="73.0570%" y="367.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (4 samples, 1.75%)</title><rect x="72.8070%" y="341" width="1.7544%" height="15" fill="rgb(233,201,37)"/><text x="73.0570%" y="351.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold::ok::{{closure}} (4 samples, 1.75%)</title><rect x="72.8070%" y="325" width="1.7544%" height="15" fill="rgb(221,78,26)"/><text x="73.0570%" y="335.50"></text></g><g><title>raytracer::scene::World::get_hit::{{closure}} (4 samples, 1.75%)</title><rect x="72.8070%" y="309" width="1.7544%" height="15" fill="rgb(250,127,30)"/><text x="73.0570%" y="319.50"></text></g><g><title>&lt;raytracer::scene::objects::Sphere as raytracer::scene::Hittable&gt;::get_hits (4 samples, 1.75%)</title><rect x="72.8070%" y="293" width="1.7544%" height="15" fill="rgb(230,49,44)"/><text x="73.0570%" y="303.50"></text></g><g><title>raytracer::geometry::Direction::length (1 samples, 0.44%)</title><rect x="74.1228%" y="277" width="0.4386%" height="15" fill="rgb(229,67,23)"/><text x="74.3728%" y="287.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::sqrt (1 samples, 0.44%)</title><rect x="74.1228%" y="261" width="0.4386%" height="15" fill="rgb(249,83,47)"/><text x="74.3728%" y="271.50"></text></g><g><title>&lt;raytracer::geometry::Location as core::ops::arith::Add&lt;raytracer::geometry::Direction&gt;&gt;::add (1 samples, 0.44%)</title><rect x="75.0000%" y="357" width="0.4386%" height="15" fill="rgb(215,43,3)"/><text x="75.2500%" y="367.50"></text></g><g><title>raytracer::scene::World::get_hit (1 samples, 0.44%)</title><rect x="75.4386%" y="357" width="0.4386%" height="15" fill="rgb(238,154,13)"/><text x="75.6886%" y="367.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.44%)</title><rect x="75.4386%" y="341" width="0.4386%" height="15" fill="rgb(219,56,2)"/><text x="75.6886%" y="351.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.44%)</title><rect x="75.4386%" y="325" width="0.4386%" height="15" fill="rgb(233,0,4)"/><text x="75.6886%" y="335.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold::ok::{{closure}} (1 samples, 0.44%)</title><rect x="75.4386%" y="309" width="0.4386%" height="15" fill="rgb(235,30,7)"/><text x="75.6886%" y="319.50"></text></g><g><title>raytracer::scene::World::get_hit::{{closure}} (1 samples, 0.44%)</title><rect x="75.4386%" y="293" width="0.4386%" height="15" fill="rgb(250,79,13)"/><text x="75.6886%" y="303.50"></text></g><g><title>&lt;raytracer::scene::objects::Sphere as raytracer::scene::Hittable&gt;::get_hits (1 samples, 0.44%)</title><rect x="75.4386%" y="277" width="0.4386%" height="15" fill="rgb(211,146,34)"/><text x="75.6886%" y="287.50"></text></g><g><title>raytracer::scene::World::get_hit (1 samples, 0.44%)</title><rect x="75.8772%" y="309" width="0.4386%" height="15" fill="rgb(228,22,38)"/><text x="76.1272%" y="319.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.44%)</title><rect x="75.8772%" y="293" width="0.4386%" height="15" fill="rgb(235,168,5)"/><text x="76.1272%" y="303.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.44%)</title><rect x="75.8772%" y="277" width="0.4386%" height="15" fill="rgb(221,155,16)"/><text x="76.1272%" y="287.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold::ok::{{closure}} (1 samples, 0.44%)</title><rect x="75.8772%" y="261" width="0.4386%" height="15" fill="rgb(215,215,53)"/><text x="76.1272%" y="271.50"></text></g><g><title>raytracer::scene::World::get_hit::{{closure}} (1 samples, 0.44%)</title><rect x="75.8772%" y="245" width="0.4386%" height="15" fill="rgb(223,4,10)"/><text x="76.1272%" y="255.50"></text></g><g><title>raytracer::scene::World::get_ray_color (1 samples, 0.44%)</title><rect x="76.3158%" y="261" width="0.4386%" height="15" fill="rgb(234,103,6)"/><text x="76.5658%" y="271.50"></text></g><g><title>raytracer::scene::World::get_ray_color (1 samples, 0.44%)</title><rect x="76.3158%" y="245" width="0.4386%" height="15" fill="rgb(227,97,0)"/><text x="76.5658%" y="255.50"></text></g><g><title>raytracer::scene::World::get_ray_color (1 samples, 0.44%)</title><rect x="76.3158%" y="229" width="0.4386%" height="15" fill="rgb(234,150,53)"/><text x="76.5658%" y="239.50"></text></g><g><title>raytracer::scene::World::get_ray_color (1 samples, 0.44%)</title><rect x="76.3158%" y="213" width="0.4386%" height="15" fill="rgb(228,201,54)"/><text x="76.5658%" y="223.50"></text></g><g><title>raytracer::scene::World::get_ray_color (1 samples, 0.44%)</title><rect x="76.3158%" y="197" width="0.4386%" height="15" fill="rgb(222,22,37)"/><text x="76.5658%" y="207.50"></text></g><g><title>raytracer::scene::World::get_ray_color (1 samples, 0.44%)</title><rect x="76.3158%" y="181" width="0.4386%" height="15" fill="rgb(237,53,32)"/><text x="76.5658%" y="191.50"></text></g><g><title>raytracer::scene::World::get_ray_color (1 samples, 0.44%)</title><rect x="76.3158%" y="165" width="0.4386%" height="15" fill="rgb(233,25,53)"/><text x="76.5658%" y="175.50"></text></g><g><title>raytracer::scene::World::get_ray_color (1 samples, 0.44%)</title><rect x="76.3158%" y="149" width="0.4386%" height="15" fill="rgb(210,40,34)"/><text x="76.5658%" y="159.50"></text></g><g><title>raytracer::scene::World::get_ray_color (3 samples, 1.32%)</title><rect x="75.8772%" y="357" width="1.3158%" height="15" fill="rgb(241,220,44)"/><text x="76.1272%" y="367.50"></text></g><g><title>raytracer::scene::World::get_ray_color (3 samples, 1.32%)</title><rect x="75.8772%" y="341" width="1.3158%" height="15" fill="rgb(235,28,35)"/><text x="76.1272%" y="351.50"></text></g><g><title>raytracer::scene::World::get_ray_color (3 samples, 1.32%)</title><rect x="75.8772%" y="325" width="1.3158%" height="15" fill="rgb(210,56,17)"/><text x="76.1272%" y="335.50"></text></g><g><title>raytracer::scene::World::get_ray_color (2 samples, 0.88%)</title><rect x="76.3158%" y="309" width="0.8772%" height="15" fill="rgb(224,130,29)"/><text x="76.5658%" y="319.50"></text></g><g><title>raytracer::scene::World::get_ray_color (2 samples, 0.88%)</title><rect x="76.3158%" y="293" width="0.8772%" height="15" fill="rgb(235,212,8)"/><text x="76.5658%" y="303.50"></text></g><g><title>raytracer::scene::World::get_ray_color (2 samples, 0.88%)</title><rect x="76.3158%" y="277" width="0.8772%" height="15" fill="rgb(223,33,50)"/><text x="76.5658%" y="287.50"></text></g><g><title>raytracer::scene::random_in_unit_sphere (1 samples, 0.44%)</title><rect x="76.7544%" y="261" width="0.4386%" height="15" fill="rgb(219,149,13)"/><text x="77.0044%" y="271.50"></text></g><g><title>raytracer::geometry::Direction::length (1 samples, 0.44%)</title><rect x="76.7544%" y="245" width="0.4386%" height="15" fill="rgb(250,156,29)"/><text x="77.0044%" y="255.50"></text></g><g><title>raytracer::scene::World::get_ray_color (12 samples, 5.26%)</title><rect x="72.3684%" y="389" width="5.2632%" height="15" fill="rgb(216,193,19)"/><text x="72.6184%" y="399.50">raytra..</text></g><g><title>raytracer::scene::World::get_ray_color (7 samples, 3.07%)</title><rect x="74.5614%" y="373" width="3.0702%" height="15" fill="rgb(216,135,14)"/><text x="74.8114%" y="383.50">ray..</text></g><g><title>raytracer::scene::random_in_unit_sphere (1 samples, 0.44%)</title><rect x="77.1930%" y="357" width="0.4386%" height="15" fill="rgb(241,47,5)"/><text x="77.4430%" y="367.50"></text></g><g><title>rand::random (1 samples, 0.44%)</title><rect x="77.1930%" y="341" width="0.4386%" height="15" fill="rgb(233,42,35)"/><text x="77.4430%" y="351.50"></text></g><g><title>rand::Rng::gen (1 samples, 0.44%)</title><rect x="77.1930%" y="325" width="0.4386%" height="15" fill="rgb(231,13,6)"/><text x="77.4430%" y="335.50"></text></g><g><title>rand::distributions::float::&lt;impl rand::distributions::Distribution&lt;f64&gt; for rand::distributions::Standard&gt;::sample (1 samples, 0.44%)</title><rect x="77.1930%" y="309" width="0.4386%" height="15" fill="rgb(207,181,40)"/><text x="77.4430%" y="319.50"></text></g><g><title>rand::Rng::gen (1 samples, 0.44%)</title><rect x="77.1930%" y="293" width="0.4386%" height="15" fill="rgb(254,173,49)"/><text x="77.4430%" y="303.50"></text></g><g><title>rand::distributions::integer::&lt;impl rand::distributions::Distribution&lt;u64&gt; for rand::distributions::Standard&gt;::sample (1 samples, 0.44%)</title><rect x="77.1930%" y="277" width="0.4386%" height="15" fill="rgb(221,1,38)"/><text x="77.4430%" y="287.50"></text></g><g><title>&lt;rand::rngs::thread::ThreadRng as rand_core::RngCore&gt;::next_u64 (1 samples, 0.44%)</title><rect x="77.1930%" y="261" width="0.4386%" height="15" fill="rgb(206,124,46)"/><text x="77.4430%" y="271.50"></text></g><g><title>&lt;rand::rngs::adapter::reseeding::ReseedingRng&lt;R,Rsdr&gt; as rand_core::RngCore&gt;::next_u64 (1 samples, 0.44%)</title><rect x="77.1930%" y="245" width="0.4386%" height="15" fill="rgb(249,21,11)"/><text x="77.4430%" y="255.50"></text></g><g><title>&lt;rand_core::block::BlockRng&lt;R&gt; as rand_core::RngCore&gt;::next_u64 (1 samples, 0.44%)</title><rect x="77.1930%" y="229" width="0.4386%" height="15" fill="rgb(222,201,40)"/><text x="77.4430%" y="239.50"></text></g><g><title>rand_core::block::BlockRng&lt;R&gt;::generate_and_set (1 samples, 0.44%)</title><rect x="77.1930%" y="213" width="0.4386%" height="15" fill="rgb(235,61,29)"/><text x="77.4430%" y="223.50"></text></g><g><title>&lt;rand::rngs::adapter::reseeding::ReseedingCore&lt;R,Rsdr&gt; as rand_core::block::BlockRngCore&gt;::generate (1 samples, 0.44%)</title><rect x="77.1930%" y="197" width="0.4386%" height="15" fill="rgb(219,207,3)"/><text x="77.4430%" y="207.50"></text></g><g><title>&lt;rand_chacha::chacha::ChaCha20Core as rand_core::block::BlockRngCore&gt;::generate (1 samples, 0.44%)</title><rect x="77.1930%" y="181" width="0.4386%" height="15" fill="rgb(222,56,46)"/><text x="77.4430%" y="191.50"></text></g><g><title>rand_chacha::guts::ChaCha::refill4 (1 samples, 0.44%)</title><rect x="77.1930%" y="165" width="0.4386%" height="15" fill="rgb(239,76,54)"/><text x="77.4430%" y="175.50"></text></g><g><title>rand_chacha::guts::refill_wide (1 samples, 0.44%)</title><rect x="77.1930%" y="149" width="0.4386%" height="15" fill="rgb(231,124,27)"/><text x="77.4430%" y="159.50"></text></g><g><title>rand_chacha::guts::refill_wide::impl_avx2 (1 samples, 0.44%)</title><rect x="77.1930%" y="133" width="0.4386%" height="15" fill="rgb(249,195,6)"/><text x="77.4430%" y="143.50"></text></g><g><title>rand_chacha::guts::refill_wide::fn_impl (1 samples, 0.44%)</title><rect x="77.1930%" y="117" width="0.4386%" height="15" fill="rgb(237,174,47)"/><text x="77.4430%" y="127.50"></text></g><g><title>rand_chacha::guts::refill_wide_impl (1 samples, 0.44%)</title><rect x="77.1930%" y="101" width="0.4386%" height="15" fill="rgb(206,201,31)"/><text x="77.4430%" y="111.50"></text></g><g><title>rand_chacha::guts::round (1 samples, 0.44%)</title><rect x="77.1930%" y="85" width="0.4386%" height="15" fill="rgb(231,57,52)"/><text x="77.4430%" y="95.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x4_avx2&lt;NI&gt; as core::ops::arith::AddAssign&gt;::add_assign (1 samples, 0.44%)</title><rect x="77.1930%" y="69" width="0.4386%" height="15" fill="rgb(248,177,22)"/><text x="77.4430%" y="79.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x4_avx2&lt;NI&gt; as core::ops::arith::Add&gt;::add (1 samples, 0.44%)</title><rect x="77.1930%" y="53" width="0.4386%" height="15" fill="rgb(215,211,37)"/><text x="77.4430%" y="63.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (1 samples, 0.44%)</title><rect x="77.1930%" y="37" width="0.4386%" height="15" fill="rgb(241,128,51)"/><text x="77.4430%" y="47.50"></text></g><g><title>rand::random (1 samples, 0.44%)</title><rect x="77.6316%" y="373" width="0.4386%" height="15" fill="rgb(227,165,31)"/><text x="77.8816%" y="383.50"></text></g><g><title>rand::Rng::gen (1 samples, 0.44%)</title><rect x="77.6316%" y="357" width="0.4386%" height="15" fill="rgb(228,167,24)"/><text x="77.8816%" y="367.50"></text></g><g><title>raytracer::scene::World::get_ray_color (16 samples, 7.02%)</title><rect x="71.4912%" y="405" width="7.0175%" height="15" fill="rgb(228,143,12)"/><text x="71.7412%" y="415.50">raytracer..</text></g><g><title>raytracer::scene::random_in_unit_sphere (2 samples, 0.88%)</title><rect x="77.6316%" y="389" width="0.8772%" height="15" fill="rgb(249,149,8)"/><text x="77.8816%" y="399.50"></text></g><g><title>raytracer::geometry::Direction::length (1 samples, 0.44%)</title><rect x="78.0702%" y="373" width="0.4386%" height="15" fill="rgb(243,35,44)"/><text x="78.3202%" y="383.50"></text></g><g><title>raytracer::scene::World::get_ray_color (25 samples, 10.96%)</title><rect x="68.4211%" y="421" width="10.9649%" height="15" fill="rgb(246,89,9)"/><text x="68.6711%" y="431.50">raytracer::scene..</text></g><g><title>raytracer::scene::random_in_unit_sphere (2 samples, 0.88%)</title><rect x="78.5088%" y="405" width="0.8772%" height="15" fill="rgb(233,213,13)"/><text x="78.7588%" y="415.50"></text></g><g><title>rand::random (2 samples, 0.88%)</title><rect x="78.5088%" y="389" width="0.8772%" height="15" fill="rgb(233,141,41)"/><text x="78.7588%" y="399.50"></text></g><g><title>rand::Rng::gen (2 samples, 0.88%)</title><rect x="78.5088%" y="373" width="0.8772%" height="15" fill="rgb(239,167,4)"/><text x="78.7588%" y="383.50"></text></g><g><title>rand::distributions::float::&lt;impl rand::distributions::Distribution&lt;f64&gt; for rand::distributions::Standard&gt;::sample (2 samples, 0.88%)</title><rect x="78.5088%" y="357" width="0.8772%" height="15" fill="rgb(209,217,16)"/><text x="78.7588%" y="367.50"></text></g><g><title>rand::Rng::gen (1 samples, 0.44%)</title><rect x="78.9474%" y="341" width="0.4386%" height="15" fill="rgb(219,88,35)"/><text x="79.1974%" y="351.50"></text></g><g><title>rand::distributions::integer::&lt;impl rand::distributions::Distribution&lt;u64&gt; for rand::distributions::Standard&gt;::sample (1 samples, 0.44%)</title><rect x="78.9474%" y="325" width="0.4386%" height="15" fill="rgb(220,193,23)"/><text x="79.1974%" y="335.50"></text></g><g><title>&lt;rand::rngs::thread::ThreadRng as rand_core::RngCore&gt;::next_u64 (1 samples, 0.44%)</title><rect x="78.9474%" y="309" width="0.4386%" height="15" fill="rgb(230,90,52)"/><text x="79.1974%" y="319.50"></text></g><g><title>&lt;rand::rngs::adapter::reseeding::ReseedingRng&lt;R,Rsdr&gt; as rand_core::RngCore&gt;::next_u64 (1 samples, 0.44%)</title><rect x="78.9474%" y="293" width="0.4386%" height="15" fill="rgb(252,106,19)"/><text x="79.1974%" y="303.50"></text></g><g><title>&lt;rand_core::block::BlockRng&lt;R&gt; as rand_core::RngCore&gt;::next_u64 (1 samples, 0.44%)</title><rect x="78.9474%" y="277" width="0.4386%" height="15" fill="rgb(206,74,20)"/><text x="79.1974%" y="287.50"></text></g><g><title>rand_core::block::BlockRng&lt;R&gt;::generate_and_set (1 samples, 0.44%)</title><rect x="78.9474%" y="261" width="0.4386%" height="15" fill="rgb(230,138,44)"/><text x="79.1974%" y="271.50"></text></g><g><title>&lt;rand::rngs::adapter::reseeding::ReseedingCore&lt;R,Rsdr&gt; as rand_core::block::BlockRngCore&gt;::generate (1 samples, 0.44%)</title><rect x="78.9474%" y="245" width="0.4386%" height="15" fill="rgb(235,182,43)"/><text x="79.1974%" y="255.50"></text></g><g><title>&lt;rand_chacha::chacha::ChaCha20Core as rand_core::block::BlockRngCore&gt;::generate (1 samples, 0.44%)</title><rect x="78.9474%" y="229" width="0.4386%" height="15" fill="rgb(242,16,51)"/><text x="79.1974%" y="239.50"></text></g><g><title>rand_chacha::guts::ChaCha::refill4 (1 samples, 0.44%)</title><rect x="78.9474%" y="213" width="0.4386%" height="15" fill="rgb(248,9,4)"/><text x="79.1974%" y="223.50"></text></g><g><title>rand_chacha::guts::refill_wide (1 samples, 0.44%)</title><rect x="78.9474%" y="197" width="0.4386%" height="15" fill="rgb(210,31,22)"/><text x="79.1974%" y="207.50"></text></g><g><title>rand_chacha::guts::refill_wide::impl_avx2 (1 samples, 0.44%)</title><rect x="78.9474%" y="181" width="0.4386%" height="15" fill="rgb(239,54,39)"/><text x="79.1974%" y="191.50"></text></g><g><title>rand_chacha::guts::refill_wide::fn_impl (1 samples, 0.44%)</title><rect x="78.9474%" y="165" width="0.4386%" height="15" fill="rgb(230,99,41)"/><text x="79.1974%" y="175.50"></text></g><g><title>rand_chacha::guts::refill_wide_impl (1 samples, 0.44%)</title><rect x="78.9474%" y="149" width="0.4386%" height="15" fill="rgb(253,106,12)"/><text x="79.1974%" y="159.50"></text></g><g><title>rand_chacha::guts::round (1 samples, 0.44%)</title><rect x="78.9474%" y="133" width="0.4386%" height="15" fill="rgb(213,46,41)"/><text x="79.1974%" y="143.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x4_avx2&lt;NI&gt; as core::ops::bit::BitXor&gt;::bitxor (1 samples, 0.44%)</title><rect x="78.9474%" y="117" width="0.4386%" height="15" fill="rgb(215,133,35)"/><text x="79.1974%" y="127.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (1 samples, 0.44%)</title><rect x="78.9474%" y="101" width="0.4386%" height="15" fill="rgb(213,28,5)"/><text x="79.1974%" y="111.50"></text></g><g><title>&lt;rand_core::block::BlockRng&lt;R&gt; as rand_core::RngCore&gt;::next_u64::{{closure}} (1 samples, 0.44%)</title><rect x="79.8246%" y="277" width="0.4386%" height="15" fill="rgb(215,77,49)"/><text x="80.0746%" y="287.50"></text></g><g><title>core::ptr::read_unaligned (1 samples, 0.44%)</title><rect x="79.8246%" y="261" width="0.4386%" height="15" fill="rgb(248,100,22)"/><text x="80.0746%" y="271.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.44%)</title><rect x="79.8246%" y="245" width="0.4386%" height="15" fill="rgb(208,67,9)"/><text x="80.0746%" y="255.50"></text></g><g><title>rand::random (3 samples, 1.32%)</title><rect x="79.3860%" y="405" width="1.3158%" height="15" fill="rgb(219,133,21)"/><text x="79.6360%" y="415.50"></text></g><g><title>rand::Rng::gen (3 samples, 1.32%)</title><rect x="79.3860%" y="389" width="1.3158%" height="15" fill="rgb(246,46,29)"/><text x="79.6360%" y="399.50"></text></g><g><title>rand::distributions::float::&lt;impl rand::distributions::Distribution&lt;f64&gt; for rand::distributions::Standard&gt;::sample (3 samples, 1.32%)</title><rect x="79.3860%" y="373" width="1.3158%" height="15" fill="rgb(246,185,52)"/><text x="79.6360%" y="383.50"></text></g><g><title>rand::Rng::gen (2 samples, 0.88%)</title><rect x="79.8246%" y="357" width="0.8772%" height="15" fill="rgb(252,136,11)"/><text x="80.0746%" y="367.50"></text></g><g><title>rand::distributions::integer::&lt;impl rand::distributions::Distribution&lt;u64&gt; for rand::distributions::Standard&gt;::sample (2 samples, 0.88%)</title><rect x="79.8246%" y="341" width="0.8772%" height="15" fill="rgb(219,138,53)"/><text x="80.0746%" y="351.50"></text></g><g><title>&lt;rand::rngs::thread::ThreadRng as rand_core::RngCore&gt;::next_u64 (2 samples, 0.88%)</title><rect x="79.8246%" y="325" width="0.8772%" height="15" fill="rgb(211,51,23)"/><text x="80.0746%" y="335.50"></text></g><g><title>&lt;rand::rngs::adapter::reseeding::ReseedingRng&lt;R,Rsdr&gt; as rand_core::RngCore&gt;::next_u64 (2 samples, 0.88%)</title><rect x="79.8246%" y="309" width="0.8772%" height="15" fill="rgb(247,221,28)"/><text x="80.0746%" y="319.50"></text></g><g><title>&lt;rand_core::block::BlockRng&lt;R&gt; as rand_core::RngCore&gt;::next_u64 (2 samples, 0.88%)</title><rect x="79.8246%" y="293" width="0.8772%" height="15" fill="rgb(251,222,45)"/><text x="80.0746%" y="303.50"></text></g><g><title>rand_core::block::BlockRng&lt;R&gt;::generate_and_set (1 samples, 0.44%)</title><rect x="80.2632%" y="277" width="0.4386%" height="15" fill="rgb(217,162,53)"/><text x="80.5132%" y="287.50"></text></g><g><title>&lt;rand::rngs::adapter::reseeding::ReseedingCore&lt;R,Rsdr&gt; as rand_core::block::BlockRngCore&gt;::generate (1 samples, 0.44%)</title><rect x="80.2632%" y="261" width="0.4386%" height="15" fill="rgb(229,93,14)"/><text x="80.5132%" y="271.50"></text></g><g><title>&lt;rand_chacha::chacha::ChaCha20Core as rand_core::block::BlockRngCore&gt;::generate (1 samples, 0.44%)</title><rect x="80.2632%" y="245" width="0.4386%" height="15" fill="rgb(209,67,49)"/><text x="80.5132%" y="255.50"></text></g><g><title>rand_chacha::guts::ChaCha::refill4 (1 samples, 0.44%)</title><rect x="80.2632%" y="229" width="0.4386%" height="15" fill="rgb(213,87,29)"/><text x="80.5132%" y="239.50"></text></g><g><title>rand_chacha::guts::refill_wide (1 samples, 0.44%)</title><rect x="80.2632%" y="213" width="0.4386%" height="15" fill="rgb(205,151,52)"/><text x="80.5132%" y="223.50"></text></g><g><title>rand_chacha::guts::refill_wide::impl_avx2 (1 samples, 0.44%)</title><rect x="80.2632%" y="197" width="0.4386%" height="15" fill="rgb(253,215,39)"/><text x="80.5132%" y="207.50"></text></g><g><title>rand_chacha::guts::refill_wide::fn_impl (1 samples, 0.44%)</title><rect x="80.2632%" y="181" width="0.4386%" height="15" fill="rgb(221,220,41)"/><text x="80.5132%" y="191.50"></text></g><g><title>rand_chacha::guts::refill_wide_impl (1 samples, 0.44%)</title><rect x="80.2632%" y="165" width="0.4386%" height="15" fill="rgb(218,133,21)"/><text x="80.5132%" y="175.50"></text></g><g><title>rand_chacha::guts::round (1 samples, 0.44%)</title><rect x="80.2632%" y="149" width="0.4386%" height="15" fill="rgb(221,193,43)"/><text x="80.5132%" y="159.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x4_avx2&lt;NI&gt; as ppv_lite86::types::RotateEachWord32&gt;::rotate_each_word_right24 (1 samples, 0.44%)</title><rect x="80.2632%" y="133" width="0.4386%" height="15" fill="rgb(240,128,52)"/><text x="80.5132%" y="143.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi8 (1 samples, 0.44%)</title><rect x="80.2632%" y="117" width="0.4386%" height="15" fill="rgb(253,114,12)"/><text x="80.5132%" y="127.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::powi (1 samples, 0.44%)</title><rect x="80.7018%" y="389" width="0.4386%" height="15" fill="rgb(215,223,47)"/><text x="80.9518%" y="399.50"></text></g><g><title>raytracer::scene::World::get_ray_color (39 samples, 17.11%)</title><rect x="64.4737%" y="437" width="17.1053%" height="15" fill="rgb(248,225,23)"/><text x="64.7237%" y="447.50">raytracer::scene::World::g..</text></g><g><title>raytracer::scene::random_in_unit_sphere (5 samples, 2.19%)</title><rect x="79.3860%" y="421" width="2.1930%" height="15" fill="rgb(250,108,0)"/><text x="79.6360%" y="431.50">r..</text></g><g><title>raytracer::geometry::Direction::length (2 samples, 0.88%)</title><rect x="80.7018%" y="405" width="0.8772%" height="15" fill="rgb(228,208,7)"/><text x="80.9518%" y="415.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::sqrt (1 samples, 0.44%)</title><rect x="81.1404%" y="389" width="0.4386%" height="15" fill="rgb(244,45,10)"/><text x="81.3904%" y="399.50"></text></g><g><title>&lt;raytracer::geometry::Direction as core::ops::arith::Sub&gt;::sub (1 samples, 0.44%)</title><rect x="81.5789%" y="421" width="0.4386%" height="15" fill="rgb(207,125,25)"/><text x="81.8289%" y="431.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x4_avx2&lt;NI&gt; as core::ops::arith::AddAssign&gt;::add_assign (2 samples, 0.88%)</title><rect x="82.8947%" y="149" width="0.8772%" height="15" fill="rgb(210,195,18)"/><text x="83.1447%" y="159.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x4_avx2&lt;NI&gt; as core::ops::arith::Add&gt;::add (2 samples, 0.88%)</title><rect x="82.8947%" y="133" width="0.8772%" height="15" fill="rgb(249,80,12)"/><text x="83.1447%" y="143.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (2 samples, 0.88%)</title><rect x="82.8947%" y="117" width="0.8772%" height="15" fill="rgb(221,65,9)"/><text x="83.1447%" y="127.50"></text></g><g><title>rand::Rng::gen (5 samples, 2.19%)</title><rect x="82.0175%" y="405" width="2.1930%" height="15" fill="rgb(235,49,36)"/><text x="82.2675%" y="415.50">r..</text></g><g><title>rand::distributions::float::&lt;impl rand::distributions::Distribution&lt;f64&gt; for rand::distributions::Standard&gt;::sample (4 samples, 1.75%)</title><rect x="82.4561%" y="389" width="1.7544%" height="15" fill="rgb(225,32,20)"/><text x="82.7061%" y="399.50"></text></g><g><title>rand::Rng::gen (4 samples, 1.75%)</title><rect x="82.4561%" y="373" width="1.7544%" height="15" fill="rgb(215,141,46)"/><text x="82.7061%" y="383.50"></text></g><g><title>rand::distributions::integer::&lt;impl rand::distributions::Distribution&lt;u64&gt; for rand::distributions::Standard&gt;::sample (4 samples, 1.75%)</title><rect x="82.4561%" y="357" width="1.7544%" height="15" fill="rgb(250,160,47)"/><text x="82.7061%" y="367.50"></text></g><g><title>&lt;rand::rngs::thread::ThreadRng as rand_core::RngCore&gt;::next_u64 (4 samples, 1.75%)</title><rect x="82.4561%" y="341" width="1.7544%" height="15" fill="rgb(216,222,40)"/><text x="82.7061%" y="351.50"></text></g><g><title>&lt;rand::rngs::adapter::reseeding::ReseedingRng&lt;R,Rsdr&gt; as rand_core::RngCore&gt;::next_u64 (4 samples, 1.75%)</title><rect x="82.4561%" y="325" width="1.7544%" height="15" fill="rgb(234,217,39)"/><text x="82.7061%" y="335.50"></text></g><g><title>&lt;rand_core::block::BlockRng&lt;R&gt; as rand_core::RngCore&gt;::next_u64 (4 samples, 1.75%)</title><rect x="82.4561%" y="309" width="1.7544%" height="15" fill="rgb(207,178,40)"/><text x="82.7061%" y="319.50"></text></g><g><title>rand_core::block::BlockRng&lt;R&gt;::generate_and_set (4 samples, 1.75%)</title><rect x="82.4561%" y="293" width="1.7544%" height="15" fill="rgb(221,136,13)"/><text x="82.7061%" y="303.50"></text></g><g><title>&lt;rand::rngs::adapter::reseeding::ReseedingCore&lt;R,Rsdr&gt; as rand_core::block::BlockRngCore&gt;::generate (4 samples, 1.75%)</title><rect x="82.4561%" y="277" width="1.7544%" height="15" fill="rgb(249,199,10)"/><text x="82.7061%" y="287.50"></text></g><g><title>&lt;rand_chacha::chacha::ChaCha20Core as rand_core::block::BlockRngCore&gt;::generate (4 samples, 1.75%)</title><rect x="82.4561%" y="261" width="1.7544%" height="15" fill="rgb(249,222,13)"/><text x="82.7061%" y="271.50"></text></g><g><title>rand_chacha::guts::ChaCha::refill4 (4 samples, 1.75%)</title><rect x="82.4561%" y="245" width="1.7544%" height="15" fill="rgb(244,185,38)"/><text x="82.7061%" y="255.50"></text></g><g><title>rand_chacha::guts::refill_wide (4 samples, 1.75%)</title><rect x="82.4561%" y="229" width="1.7544%" height="15" fill="rgb(236,202,9)"/><text x="82.7061%" y="239.50"></text></g><g><title>rand_chacha::guts::refill_wide::impl_avx2 (3 samples, 1.32%)</title><rect x="82.8947%" y="213" width="1.3158%" height="15" fill="rgb(250,229,37)"/><text x="83.1447%" y="223.50"></text></g><g><title>rand_chacha::guts::refill_wide::fn_impl (3 samples, 1.32%)</title><rect x="82.8947%" y="197" width="1.3158%" height="15" fill="rgb(206,174,23)"/><text x="83.1447%" y="207.50"></text></g><g><title>rand_chacha::guts::refill_wide_impl (3 samples, 1.32%)</title><rect x="82.8947%" y="181" width="1.3158%" height="15" fill="rgb(211,33,43)"/><text x="83.1447%" y="191.50"></text></g><g><title>rand_chacha::guts::round (3 samples, 1.32%)</title><rect x="82.8947%" y="165" width="1.3158%" height="15" fill="rgb(245,58,50)"/><text x="83.1447%" y="175.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x4_avx2&lt;NI&gt; as ppv_lite86::types::RotateEachWord32&gt;::rotate_each_word_right20 (1 samples, 0.44%)</title><rect x="83.7719%" y="149" width="0.4386%" height="15" fill="rgb(244,68,36)"/><text x="84.0219%" y="159.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_or_si256 (1 samples, 0.44%)</title><rect x="83.7719%" y="133" width="0.4386%" height="15" fill="rgb(232,229,15)"/><text x="84.0219%" y="143.50"></text></g><g><title>rand::random (6 samples, 2.63%)</title><rect x="82.0175%" y="421" width="2.6316%" height="15" fill="rgb(254,30,23)"/><text x="82.2675%" y="431.50">ra..</text></g><g><title>rand::rngs::thread::thread_rng (1 samples, 0.44%)</title><rect x="84.2105%" y="405" width="0.4386%" height="15" fill="rgb(235,160,14)"/><text x="84.4605%" y="415.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1 samples, 0.44%)</title><rect x="84.2105%" y="389" width="0.4386%" height="15" fill="rgb(212,155,44)"/><text x="84.4605%" y="399.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.44%)</title><rect x="84.2105%" y="373" width="0.4386%" height="15" fill="rgb(226,2,50)"/><text x="84.4605%" y="383.50"></text></g><g><title>rand::rngs::thread::THREAD_RNG_KEY::__getit (1 samples, 0.44%)</title><rect x="84.2105%" y="357" width="0.4386%" height="15" fill="rgb(234,177,6)"/><text x="84.4605%" y="367.50"></text></g><g><title>std::thread::local::fast::Key&lt;T&gt;::get (1 samples, 0.44%)</title><rect x="84.2105%" y="341" width="0.4386%" height="15" fill="rgb(217,24,9)"/><text x="84.4605%" y="351.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::powi (1 samples, 0.44%)</title><rect x="84.6491%" y="405" width="0.4386%" height="15" fill="rgb(220,13,46)"/><text x="84.8991%" y="415.50"></text></g><g><title>raytracer::scene::World::get_ray_color (83 samples, 36.40%)</title><rect x="49.1228%" y="453" width="36.4035%" height="15" fill="rgb(239,221,27)"/><text x="49.3728%" y="463.50">raytracer::scene::World::get_ray_color</text></g><g><title>raytracer::scene::random_in_unit_sphere (9 samples, 3.95%)</title><rect x="81.5789%" y="437" width="3.9474%" height="15" fill="rgb(222,198,25)"/><text x="81.8289%" y="447.50">rayt..</text></g><g><title>raytracer::geometry::Direction::length (2 samples, 0.88%)</title><rect x="84.6491%" y="421" width="0.8772%" height="15" fill="rgb(211,99,13)"/><text x="84.8991%" y="431.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::sqrt (1 samples, 0.44%)</title><rect x="85.0877%" y="405" width="0.4386%" height="15" fill="rgb(232,111,31)"/><text x="85.3377%" y="415.50"></text></g><g><title>&lt;f64 as rand::distributions::utils::FloatSIMDUtils&gt;::cast_from_int (4 samples, 1.75%)</title><rect x="87.2807%" y="389" width="1.7544%" height="15" fill="rgb(245,82,37)"/><text x="87.5307%" y="399.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x4_avx2&lt;NI&gt; as core::ops::arith::AddAssign&gt;::add_assign (3 samples, 1.32%)</title><rect x="89.0351%" y="165" width="1.3158%" height="15" fill="rgb(227,149,46)"/><text x="89.2851%" y="175.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x4_avx2&lt;NI&gt; as core::ops::arith::Add&gt;::add (3 samples, 1.32%)</title><rect x="89.0351%" y="149" width="1.3158%" height="15" fill="rgb(218,36,50)"/><text x="89.2851%" y="159.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (3 samples, 1.32%)</title><rect x="89.0351%" y="133" width="1.3158%" height="15" fill="rgb(226,80,48)"/><text x="89.2851%" y="143.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x4_avx2&lt;NI&gt; as core::ops::bit::BitXor&gt;::bitxor (4 samples, 1.75%)</title><rect x="90.3509%" y="165" width="1.7544%" height="15" fill="rgb(238,224,15)"/><text x="90.6009%" y="175.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (4 samples, 1.75%)</title><rect x="90.3509%" y="149" width="1.7544%" height="15" fill="rgb(241,136,10)"/><text x="90.6009%" y="159.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x4_avx2&lt;NI&gt; as ppv_lite86::types::RotateEachWord32&gt;::rotate_each_word_right16 (1 samples, 0.44%)</title><rect x="92.1053%" y="165" width="0.4386%" height="15" fill="rgb(208,32,45)"/><text x="92.3553%" y="175.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi8 (1 samples, 0.44%)</title><rect x="92.1053%" y="149" width="0.4386%" height="15" fill="rgb(207,135,9)"/><text x="92.3553%" y="159.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x4_avx2&lt;NI&gt; as ppv_lite86::types::RotateEachWord32&gt;::rotate_each_word_right20 (4 samples, 1.75%)</title><rect x="92.5439%" y="165" width="1.7544%" height="15" fill="rgb(206,86,44)"/><text x="92.7939%" y="175.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_or_si256 (4 samples, 1.75%)</title><rect x="92.5439%" y="149" width="1.7544%" height="15" fill="rgb(245,177,15)"/><text x="92.7939%" y="159.50"></text></g><g><title>rand::Rng::gen (21 samples, 9.21%)</title><rect x="86.8421%" y="421" width="9.2105%" height="15" fill="rgb(206,64,50)"/><text x="87.0921%" y="431.50">rand::Rng::gen</text></g><g><title>rand::distributions::float::&lt;impl rand::distributions::Distribution&lt;f64&gt; for rand::distributions::Standard&gt;::sample (20 samples, 8.77%)</title><rect x="87.2807%" y="405" width="8.7719%" height="15" fill="rgb(234,36,40)"/><text x="87.5307%" y="415.50">rand::distri..</text></g><g><title>rand::Rng::gen (16 samples, 7.02%)</title><rect x="89.0351%" y="389" width="7.0175%" height="15" fill="rgb(213,64,8)"/><text x="89.2851%" y="399.50">rand::Rng..</text></g><g><title>rand::distributions::integer::&lt;impl rand::distributions::Distribution&lt;u64&gt; for rand::distributions::Standard&gt;::sample (16 samples, 7.02%)</title><rect x="89.0351%" y="373" width="7.0175%" height="15" fill="rgb(210,75,36)"/><text x="89.2851%" y="383.50">rand::dis..</text></g><g><title>&lt;rand::rngs::thread::ThreadRng as rand_core::RngCore&gt;::next_u64 (16 samples, 7.02%)</title><rect x="89.0351%" y="357" width="7.0175%" height="15" fill="rgb(229,88,21)"/><text x="89.2851%" y="367.50">&lt;rand::rn..</text></g><g><title>&lt;rand::rngs::adapter::reseeding::ReseedingRng&lt;R,Rsdr&gt; as rand_core::RngCore&gt;::next_u64 (16 samples, 7.02%)</title><rect x="89.0351%" y="341" width="7.0175%" height="15" fill="rgb(252,204,47)"/><text x="89.2851%" y="351.50">&lt;rand::rn..</text></g><g><title>&lt;rand_core::block::BlockRng&lt;R&gt; as rand_core::RngCore&gt;::next_u64 (16 samples, 7.02%)</title><rect x="89.0351%" y="325" width="7.0175%" height="15" fill="rgb(208,77,27)"/><text x="89.2851%" y="335.50">&lt;rand_cor..</text></g><g><title>rand_core::block::BlockRng&lt;R&gt;::generate_and_set (16 samples, 7.02%)</title><rect x="89.0351%" y="309" width="7.0175%" height="15" fill="rgb(221,76,26)"/><text x="89.2851%" y="319.50">rand_core..</text></g><g><title>&lt;rand::rngs::adapter::reseeding::ReseedingCore&lt;R,Rsdr&gt; as rand_core::block::BlockRngCore&gt;::generate (16 samples, 7.02%)</title><rect x="89.0351%" y="293" width="7.0175%" height="15" fill="rgb(225,139,18)"/><text x="89.2851%" y="303.50">&lt;rand::rn..</text></g><g><title>&lt;rand_chacha::chacha::ChaCha20Core as rand_core::block::BlockRngCore&gt;::generate (16 samples, 7.02%)</title><rect x="89.0351%" y="277" width="7.0175%" height="15" fill="rgb(230,137,11)"/><text x="89.2851%" y="287.50">&lt;rand_cha..</text></g><g><title>rand_chacha::guts::ChaCha::refill4 (16 samples, 7.02%)</title><rect x="89.0351%" y="261" width="7.0175%" height="15" fill="rgb(212,28,1)"/><text x="89.2851%" y="271.50">rand_chac..</text></g><g><title>rand_chacha::guts::refill_wide (16 samples, 7.02%)</title><rect x="89.0351%" y="245" width="7.0175%" height="15" fill="rgb(248,164,17)"/><text x="89.2851%" y="255.50">rand_chac..</text></g><g><title>rand_chacha::guts::refill_wide::impl_avx2 (16 samples, 7.02%)</title><rect x="89.0351%" y="229" width="7.0175%" height="15" fill="rgb(222,171,42)"/><text x="89.2851%" y="239.50">rand_chac..</text></g><g><title>rand_chacha::guts::refill_wide::fn_impl (16 samples, 7.02%)</title><rect x="89.0351%" y="213" width="7.0175%" height="15" fill="rgb(243,84,45)"/><text x="89.2851%" y="223.50">rand_chac..</text></g><g><title>rand_chacha::guts::refill_wide_impl (16 samples, 7.02%)</title><rect x="89.0351%" y="197" width="7.0175%" height="15" fill="rgb(252,49,23)"/><text x="89.2851%" y="207.50">rand_chac..</text></g><g><title>rand_chacha::guts::round (16 samples, 7.02%)</title><rect x="89.0351%" y="181" width="7.0175%" height="15" fill="rgb(215,19,7)"/><text x="89.2851%" y="191.50">rand_chac..</text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x4_avx2&lt;NI&gt; as ppv_lite86::types::RotateEachWord32&gt;::rotate_each_word_right25 (4 samples, 1.75%)</title><rect x="94.2982%" y="165" width="1.7544%" height="15" fill="rgb(238,81,41)"/><text x="94.5482%" y="175.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_or_si256 (4 samples, 1.75%)</title><rect x="94.2982%" y="149" width="1.7544%" height="15" fill="rgb(210,199,37)"/><text x="94.5482%" y="159.50"></text></g><g><title>rand::random (24 samples, 10.53%)</title><rect x="85.9649%" y="437" width="10.5263%" height="15" fill="rgb(244,192,49)"/><text x="86.2149%" y="447.50">rand::random</text></g><g><title>rand::rngs::thread::thread_rng (1 samples, 0.44%)</title><rect x="96.0526%" y="421" width="0.4386%" height="15" fill="rgb(226,211,11)"/><text x="96.3026%" y="431.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::powi (1 samples, 0.44%)</title><rect x="97.3684%" y="421" width="0.4386%" height="15" fill="rgb(236,162,54)"/><text x="97.6184%" y="431.50"></text></g><g><title>__libc_start_main (198 samples, 86.84%)</title><rect x="12.7193%" y="613" width="86.8421%" height="15" fill="rgb(220,229,9)"/><text x="12.9693%" y="623.50">__libc_start_main</text></g><g><title>main (198 samples, 86.84%)</title><rect x="12.7193%" y="597" width="86.8421%" height="15" fill="rgb(250,87,22)"/><text x="12.9693%" y="607.50">main</text></g><g><title>std::rt::lang_start_internal (198 samples, 86.84%)</title><rect x="12.7193%" y="581" width="86.8421%" height="15" fill="rgb(239,43,17)"/><text x="12.9693%" y="591.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (198 samples, 86.84%)</title><rect x="12.7193%" y="565" width="86.8421%" height="15" fill="rgb(231,177,25)"/><text x="12.9693%" y="575.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (198 samples, 86.84%)</title><rect x="12.7193%" y="549" width="86.8421%" height="15" fill="rgb(219,179,1)"/><text x="12.9693%" y="559.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (198 samples, 86.84%)</title><rect x="12.7193%" y="533" width="86.8421%" height="15" fill="rgb(238,219,53)"/><text x="12.9693%" y="543.50">std::panicking::try::do_call</text></g><g><title>std::rt::lang_start_internal::{{closure}} (198 samples, 86.84%)</title><rect x="12.7193%" y="517" width="86.8421%" height="15" fill="rgb(232,167,36)"/><text x="12.9693%" y="527.50">std::rt::lang_start_internal::{{closure}}</text></g><g><title>std::rt::lang_start::{{closure}} (198 samples, 86.84%)</title><rect x="12.7193%" y="501" width="86.8421%" height="15" fill="rgb(244,19,51)"/><text x="12.9693%" y="511.50">std::rt::lang_start::{{closure}}</text></g><g><title>raytracer::main (198 samples, 86.84%)</title><rect x="12.7193%" y="485" width="86.8421%" height="15" fill="rgb(224,6,22)"/><text x="12.9693%" y="495.50">raytracer::main</text></g><g><title>raytracer::scene::World::get_ray_color (150 samples, 65.79%)</title><rect x="33.7719%" y="469" width="65.7895%" height="15" fill="rgb(224,145,5)"/><text x="34.0219%" y="479.50">raytracer::scene::World::get_ray_color</text></g><g><title>raytracer::scene::random_in_unit_sphere (32 samples, 14.04%)</title><rect x="85.5263%" y="453" width="14.0351%" height="15" fill="rgb(234,130,49)"/><text x="85.7763%" y="463.50">raytracer::scene::ran..</text></g><g><title>raytracer::geometry::Direction::length (7 samples, 3.07%)</title><rect x="96.4912%" y="437" width="3.0702%" height="15" fill="rgb(254,6,2)"/><text x="96.7412%" y="447.50">ray..</text></g><g><title>std::f64::&lt;impl f64&gt;::sqrt (4 samples, 1.75%)</title><rect x="97.8070%" y="421" width="1.7544%" height="15" fill="rgb(208,96,46)"/><text x="98.0570%" y="431.50"></text></g><g><title>all (228 samples, 100%)</title><rect x="0.0000%" y="661" width="100.0000%" height="15" fill="rgb(239,3,39)"/><text x="0.2500%" y="671.50"></text></g><g><title>raytracer (228 samples, 100.00%)</title><rect x="0.0000%" y="645" width="100.0000%" height="15" fill="rgb(233,210,1)"/><text x="0.2500%" y="655.50">raytracer</text></g><g><title>_start (203 samples, 89.04%)</title><rect x="10.9649%" y="629" width="89.0351%" height="15" fill="rgb(244,137,37)"/><text x="11.2149%" y="639.50">_start</text></g><g><title>_dl_start (1 samples, 0.44%)</title><rect x="99.5614%" y="613" width="0.4386%" height="15" fill="rgb(240,136,2)"/><text x="99.8114%" y="623.50"></text></g><g><title>_dl_sysdep_start (1 samples, 0.44%)</title><rect x="99.5614%" y="597" width="0.4386%" height="15" fill="rgb(239,18,37)"/><text x="99.8114%" y="607.50"></text></g><g><title>dl_main (1 samples, 0.44%)</title><rect x="99.5614%" y="581" width="0.4386%" height="15" fill="rgb(218,185,22)"/><text x="99.8114%" y="591.50"></text></g></svg></svg>